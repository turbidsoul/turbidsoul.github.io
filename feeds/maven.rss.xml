<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Turbidsoul's 小黑屋</title><link>http://blog.turbidsoul.me/</link><description></description><atom:link href="http://blog.turbidsoul.me/feeds/maven.rss.xml" rel="self"></atom:link><lastBuildDate>Tue, 11 Jun 2013 00:00:00 +0800</lastBuildDate><item><title>lesscss maven plugin简单的配置</title><link>http://blog.turbidsoul.me/posts/lesscss-maven-pluginjian-dan-de-pei-zhi.html</link><description>&lt;p&gt;这其实是一个很简单的问题，本来并不打算写成一片文章的，因为这个文件和另外一个问题是一起的，就是我们在nginx上做css和js文件合并时遇到的，不过在这之前我还遇到了另外一个问题，就是我们开发环境是windows7，而nginx下有个静态文件合并的模块: &lt;strong&gt;http_concat_module&lt;/strong&gt; ，是&lt;a href="https://github.com/alibaba/nginx-http-concat" title="HTTP Concatenation module for Nginx"&gt;淘宝&lt;/a&gt;开源的，这个模块并不是nginx标准模块，所以要使用它需要自己重新编译nginx，具体如何编译我需要一段一点时间整理一下，在之后的文章中会写出来。&lt;/p&gt;
&lt;p&gt;至于为什么要使用&lt;a href="http://lesscss.org" title="The Dynamic Stylesheet language"&gt;less&lt;/a&gt;是因为使用了 &lt;strong&gt;http_concat_module&lt;/strong&gt; 之后css中文件的一些路径出现了错误，需要为css文件设置一些变量，其实使用maven的插件也可以进行变量替换，但是这样只能在maven打包的时候才能起作用，对于开发来说就不行，因为开发必须要求在编译的时候就生效。所以就需要使用maven的另一个插件&lt;a href="https://github.com/marceloverdijk/lesscss-maven-plugin" title="Official LESS CSS Maven Plugin"&gt;lesscss-maven-plugin&lt;/a&gt;，这个插件的作用就是在编译的时候就能把less转换成css，这样做对我们最大的好处就是需要修改的地方是最少的，而且能一劳永逸的解决这个问题。&lt;/p&gt;
&lt;p&gt;现在我们来说说这个插件如何配置：&lt;/p&gt;
&lt;h4 id="_1"&gt;添加插件&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.lesscss&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;lesscss-maven-plugin&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.3.3&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;插件添加好后，就能在 &lt;em&gt;pom.xml&lt;/em&gt;  &lt;code&gt;plugins&lt;/code&gt; 节点下多出上面的代码&lt;/p&gt;
&lt;h5 id="_2"&gt;配置插件&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.lesscss&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;lesscss-maven-plugin&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.3.3&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;sourceDirectory&amp;gt;&lt;/span&gt;${project.basedir}/src/main/webapp/less&lt;span class="nt"&gt;&amp;lt;/sourceDirectory&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;outputDirectory&amp;gt;&lt;/span&gt;${project.build.directory}/${project.build.finalName}/css&lt;span class="nt"&gt;&amp;lt;/outputDirectory&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;compress&amp;gt;&lt;/span&gt;true&lt;span class="nt"&gt;&amp;lt;/compress&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;executions&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;compile&lt;span class="nt"&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/executions&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;现在我来解释一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;sourceDirectory&lt;/strong&gt; 这个节点是要配置less文件所在目录&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;outputDirectory&lt;/strong&gt; 配置的是less文件编译之后生成的css文件所在目录&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;compress&lt;/strong&gt; 说明生成的css文件是否要压缩&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lessJs&lt;/strong&gt; 指定一个Less.js文件，默认是插件包中自带的但是版本是1.1.3，如果需要使用最新的那就要指定一个less.js文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;force&lt;/strong&gt; 当这个值为&lt;code&gt;true&lt;/code&gt;的时候插件就会强制编译less文件，否则就会在css文件不存在或者源文件有修改的时候才会编译less文件为css文件，默认值是&lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;inlcudes&lt;/strong&gt; 指定需要编译的文件，默认是{"*&lt;em&gt;\/&lt;/em&gt;.less"}&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;expludes&lt;/strong&gt; 指定不需要编译的文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;encoding&lt;/strong&gt; 输入css文件的编码，默认是${project.build.sourceEncoding}&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面来看一下运行结果：&lt;/p&gt;
&lt;p&gt;less文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;@color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;#4D926F&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nf"&gt;#header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;生成的css文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;#header&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#4d926f&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#4d926f&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="_3"&gt;结论&lt;/h4&gt;
&lt;p&gt;使用less的目的其实一个，就是为了一劳永逸的解决css文件中对图片引用的地址问题，需要同时兼顾开发和生产环境，当然less的功能并不是只有这一个，他有很多很炫的特性，也能简化css的开发。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;2012-6-15 夜 添加&lt;/p&gt;
&lt;p&gt;今天对这篇文章最了一些修改，主要是上次写的有些仓促，并没有写清楚，另外是下面需要补充一些东西。&lt;/p&gt;
&lt;p&gt;这个插件并不能使用maven的变量过滤，这个在github上也有人提出过&lt;a href="https://github.com/marceloverdijk/lesscss-maven-plugin/issues/10" title="Add 'filtering' configuration option to allow use ${..} variables in .less files"&gt;issue 10&lt;/a&gt;，是十个月之前提出来的，但是作者并没有给出回复。其实也正常，这个和maven的编译打包过程有关，maven的filter是在package之前compile之后进行的，而且这个插件是在compile是进行less文件编译的，所以它是无法处理的。&lt;/p&gt;
&lt;p&gt;但是也不是完全没有办法，我查看了源代码发现它是直接文件对文件的操作，我们可以在这之前先对less文件进行变量替换，然后在进行编译，这样也可以。但是我觉得这样的操作很奇怪，怎么看怎么不舒服。&lt;/p&gt;
&lt;p&gt;还有另外一个插件&lt;a href="http://code.google.com/p/wro4j/" title="Web Resource Optimizer for Java"&gt;wro4j&lt;/a&gt;，这个插件的功能更为强大，支持css，js合并，压缩，less文件编译，合并，压缩等等丰富的功能，也支持自定义的processor但是如果要实现上面说的应该也要自己实现processor，我并没有看到官方文档或者jboss上介绍，而且官方文档关于less的内容太少，而且做到这里，发现我们的项目使用less之后需要变动的东西太多，主要来自css书写的问题，很多时候为了兼容ie，写了一些非标准的css代码，修改成less之后需要话大量的时间去修正，所以就放弃了less，还是决定采用之前的方案处理。&lt;/p&gt;
&lt;p&gt;这里有一个关于wro4j的例子，有兴趣的朋友可以看一下：
&lt;a href="https://github.com/jbosstools/m2e-wro4j/wiki/Sample-twitter-bootstrap-project"&gt;https://github.com/jbosstools/m2e-wro4j/wiki/Sample-twitter-bootstrap-project&lt;/a&gt;&lt;/p&gt;&lt;script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js"&gt;&lt;/script&gt;
&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
                ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js?config=TeX-MML-AM_HTMLorMML-full'
                : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_HTMLorMML-full';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    asciimath2jax: {" +
            "      delimiters: [['$','$'], ['`','`']]"+
            "    }"+
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Turbidsoul Chan</dc:creator><pubDate>Tue, 11 Jun 2013 00:00:00 +0800</pubDate><guid>tag:blog.turbidsoul.me,2013-06-11:posts/lesscss-maven-pluginjian-dan-de-pei-zhi.html</guid><category>lesscss</category><category>maven</category><category>java</category></item></channel></rss>